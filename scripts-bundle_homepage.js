




const scriptEl=document.getElementById("filter-projects-script"),projectsText=scriptEl.dataset.projects;if(!projectsText)throw"Error: No projects were passed to the projects list";const component=document.getElementById("filter-projects"),projectsList=document.getElementById("projects-list"),projects=JSON.parse(projectsText),createFilterHeaderMarkup=function(e){return`\n    <table class="filter-header">\n    <tbody>\n        <tr class="header-space">\n            <td colspan="3">&nbsp;</td>\n        </tr>\n        <tr class="header-nav">\n            <td class="label">\n                <span>Filter</span>\n            </td>\n            <td class="filter-name">\n                ${e.charAt(0).toUpperCase()+e.slice(1)}\n            </td>\n            <td>\n                <button onclick="showAllProjects(event)" class="filters-clear unstyled-button">\n                    <img src="/assets/images/filters-clear-button01.png"/>\n                    Show All Projects\n                </button>\n            </td>\n        </tr>\n    </tbody>\n  </table>\n  `},createProjectListMarkup=function(e,t){const r=e.filter((e=>t?e.filters.some((e=>e===t)):e));return`\n    ${t?createFilterHeaderMarkup(t):""}\n    <div class="${t?"filter-container":""}">\n      <ul class="unstyled-list">\n          ${r.map((e=>`\n                  <li>\n                      <a \n                        onmouseover="addHoverClass(event)" \n                        onmouseleave="removeHoverClass(event)"\n                        href="${e.url}"\n                      >\n                        <figure>\n                          <div class="thumb">\n                            <div class="thumb-image" style="background-image: url('${e.url}${e.image}');"></div>\n                          </div>\n                          <figcaption>\n                            ${e.name}\n                          </figcaption>\n                        </figure>\n                      </a>\n                  </li>\n              `)).join("")}\n      </ul>\n    </div>\n  `},showAllProjects=function(e){e&&e.preventDefault(),projectsList.innerHTML=createProjectListMarkup(projects)},filterList=document.getElementById("filter-list"),filters=[...filterList.getElementsByTagName("BUTTON")];filters.forEach((e=>{const t=e.dataset.filter;e.addEventListener("click",(e=>{e.preventDefault(),projectsList.innerHTML=createProjectListMarkup(projects,t)}))}));const addHoverClass=function(e){projectsList.classList.add("item-hovered")},removeHoverClass=async function(e){projectsList.classList.remove("item-hovered")},urlParams=new URLSearchParams(window.location.search),filterParam=urlParams.get("projectFilter"),isQueryValid=filterParam&&filters.some((e=>e.dataset.filter.toLowerCase()===filterParam.toLowerCase()));console.log("Is query valid??",isQueryValid),isQueryValid?projectsList.innerHTML=createProjectListMarkup(projects,filterParam.toLowerCase()):showAllProjects();